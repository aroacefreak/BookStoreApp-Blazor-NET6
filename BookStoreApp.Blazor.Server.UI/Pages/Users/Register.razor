@page "/users/register"
@inject IClient httpClient
@inject NavigationManager _navManager
@using BookStoreApp.Blazor.Server.UI.Services.Base


<h3>Register New Account</h3>
@if (!string.IsNullOrEmpty(message))
{
	<div class="alert alert-danger">
		<p>@message</p>
	</div>
}
<div>
	@*Razor Component. Also this is comment syntax*@
	<EditForm Model="RegistrationModel" OnValidSubmit="HandleRegistration">
		<DataAnnotationsValidator />
		<ValidationSummary />
		<div class="form-group">
			<label for="email">Email Address</label>
			<InputText class="form-control" @bind-Value="RegistrationModel.Email"></InputText>
			<ValidationMessage For="@(()=> RegistrationModel.Email)" />
		</div>
		<br/>
		<div class="form-group">
			<label for="email">First Name</label>
			<InputText class="form-control" @bind-Value="RegistrationModel.FirstName"></InputText>
			<ValidationMessage For="@(()=> RegistrationModel.FirstName)" />
		</div>
		<br/>
		<div class="form-group">
			<label for="email">Last Name</label>
			<InputText class="form-control" @bind-Value="RegistrationModel.LastName"></InputText>
			<ValidationMessage For="@(()=> RegistrationModel.LastName)" />
		</div>
		<br/>
		<div class="form-group">
			<label for="email">Password</label>
			<InputText class="form-control" type="password" @bind-Value="RegistrationModel.Password"></InputText>
			<ValidationMessage For="@(()=> RegistrationModel.Password)" />
		</div>
		<br/>
		
		<button type="submit" class="btn btn-primary btn-block"> Register</button>
	</EditForm>
</div>

@code {
	UserDto RegistrationModel = new UserDto()
	{
		Role =  "User"
	};
	string message = string.Empty;

	private async Task HandleRegistration()
	{

		try
		{
			await httpClient.RegisterAsync(RegistrationModel);
			NavigateToLogin();
		}
		catch (ApiException ex)
		{
			if (ex.StatusCode >= 200 && ex.StatusCode <= 299)
			{
				NavigateToLogin();
			}
			message = ex.Message;
		}
	}

	private void NavigateToLogin()
	{
		_navManager.NavigateTo("/users/login");
	}
}
