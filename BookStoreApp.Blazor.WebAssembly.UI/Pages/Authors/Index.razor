@page "/authors/"
@using BookStoreApp.Blazor.WebAssembly.UI.Models
@inject IAuthorService authorService
@inject IJSRuntime js
<h3>Index</h3>

@if (response.Success == false)
{
	<div class="alert alert-danger">
		<h4>@response.Message</h4>
	</div>
}
else
{
	@if (Authors == null)
	{
		<div class="alert alert-info">
			<h4>Loading Data...</h4>
		</div>
	}
	else
	{
		<AuthorizeView Roles=@Roles.Administrator>
			<a class="btn btn-primary" href="/authors/create"><span class="oi oi-plus" aria-hidden="true"></span>Create </a>
		</AuthorizeView>
		
		<br/>
		<AuthorTable Authors="Authors" TotalSize="TotalSize" OnScroll="LoadAuthors"/>
		@*<table class="table table-responsive">
			<thead>
			<tr>
				<th>First Name</th>
				<th>Last Name</th>
				<th>Action</th>
			</tr>
			</thead>
			<tbody>
			@foreach (var author in Authors)
			{
				<tr>
					<td>@author.FirstName</td>
					<td>@author.LastName</td>
					<td>
						<a class="btn btn-primary" href="/authors/details/@author.Id"><span class="oi oi-book" aria-hidden="true"></span>Details </a>
						<AuthorizeView Roles=@Roles.Administrator>
							<a class="btn btn-warning" href="/authors/update/@author.Id"><span class="oi oi-pencil" aria-hidden="true"></span>Edit </a>
							<button class="btn btn-danger" @onclick=@(() => Delete(@author.Id))><span class="oi oi-delete" aria-hidden="true"></span>Delete </button>
						</AuthorizeView>
					</td>
				</tr>
			}
			</tbody>
		</table>*@
	}
}

@code {
	private List<AuthorReadOnlyDto> Authors;
	public int TotalSize { get; set; }
	private Response<AuthorReadOnlyDtoVirtualiseResponse> response = new Response<AuthorReadOnlyDtoVirtualiseResponse>(){Success = true};

	protected override async Task OnInitializedAsync()
	{
		response = await authorService.Get(new QueryParameters());
		if (response.Success)
		{
			Authors = response.Data.Items.ToList();
		}
	}

	private async Task LoadAuthors(QueryParameters queryParams)
	{
		var virtualiseResult = await authorService.Get(queryParams);
		Authors = virtualiseResult.Data.Items.ToList();
		TotalSize = virtualiseResult.Data.TotalSize;
	}

}
